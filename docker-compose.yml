# docker-compose.yml
# (You can remove the "version" line to silence the deprecation warning)

services:
  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=oadb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d oadb"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  api:
    build: ./app/api
    environment:
      - APP_VERSION=0.1.0
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+psycopg://appuser:apppass@db:5432/oadb
      - DATA_DIR=/app/data/raw
      - DATA_PROCESSED=/app/data/processed
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./data:/app/data

  worker:
    build: ./app/api      # reuse the same image (code + deps)
    environment:
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql+psycopg://appuser:apppass@db:5432/oadb
      - DATA_DIR=/app/data/raw
      - DATA_PROCESSED=/app/data/processed
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    # Note: don't use ${REDIS_URL} here; Compose won't pull from the service env.
    command: rq worker -u redis://redis:6379/0 default
    volumes:
      - ./data:/app/data

  frontend:
    build: ./app/frontend
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./app/frontend:/app         # your source (hot-reload)
      - /app/node_modules           # anonymous volume so deps persist

volumes:
  dbdata:
